-- Remise de tous les numeraux auto à 0
\! echo "remise à 1 de tout les serial"
ALTER SEQUENCE events_eno_seq  RESTART WITH 1;
ALTER SEQUENCE games_gno_seq  RESTART WITH 1;
ALTER SEQUENCE medaltype_id_medal_type_seq  RESTART WITH 1;
ALTER SEQUENCE sport_id_sport_seq  RESTART WITH 1;

-- Suppression des tables crées
\! echo "\nSuppression de toutes les tables"
DROP TABLE IF EXISTS import;
DROP TABLE IF EXISTS region;
DROP TABLE IF EXISTS performance;
DROP TABLE IF EXISTS events;
DROP TABLE IF EXISTS games;
DROP TABLE IF EXISTS team;
DROP TABLE IF EXISTS athlete;

--Creation de la table temporaire import
\! echo "\nCreation de table temporaire import"
CREATE temporary TABLE import(
    id INT,
    name VARCHAR(108),
    sex CHAR(1),
    age INT,
    height INT,
    weight FLOAT,
    team VARCHAR(47),
    noc VARCHAR(3),
    game VARCHAR(11),
    year INT,
    season VARCHAR(26),
    city VARCHAR(22),
    sport VARCHAR(25),
    event VARCHAR(85),
    medal VARCHAR(6)
);

-- Copie de tous du fichier athlete_events.csv dans la table import
\copy import from athlete_events.csv delimiter ',' HEADER csv NULL AS 'NA';

--
delete from import where year < 1920 or sport Like ('Art%');

-- Creation de la table temporaire region
\! echo "\nCreation de table temporaire import"
CREATE temporary TABLE region(
    noc varchar(3) PRIMARY KEY,
    region varchar(32),
    notes varchar(27));

-- Copie de tous du fichier noc_regions.csv dans la table region
\copy region FROM noc_regions.csv delimiter ',' HEADER csv;

-- Nous avons remarquer un probleme concernant les athletes provenant de Singapour. 
-- Le probleme était que le noc entre le fichier athlete_events.csv et noc_regions.csv sont différents
-- Du coup lors de l'import de region nous remplacons le noc de Singapour qui est 'SIN' en 'SGP'
\! echo "\nPassage de 'SIN' à 'SGP'"
UPDATE region
SET noc = REPLACE(noc, 'SIN', 'SGP')
WHERE noc = 'SIN';

--Creation de la table athlete
\! echo "\nCreation de table athlete"
CREATE TABLE athlete (
    id int PRIMARY KEY,
    name VARCHAR(108),
    sex VARCHAR(1)
);

-- Insersation des valeurs dans la table athlete

INSERT INTO athlete (id, name, sex)
SELECT DISTINCT id, name, sex
FROM import;

--Creation de la table team
\! echo "\nCreation de table team"
CREATE TABLE team (
    noc VARCHAR(3) PRIMARY KEY,
    team VARCHAR(47),
    notes VARCHAR(27)
);

-- Insersation des valeurs dans la table team
INSERT INTO team (noc, team, notes)
SELECT DISTINCT noc, region, notes
FROM region;

--Creation de la table games
\! echo "\nCreation de table games"
CREATE TABLE games (
    gno SERIAL PRIMARY KEY,
    game VARCHAR(11),
    year INT,
    season VARCHAR(6),
    city VARCHAR(22)
);

-- Insersation des valeurs dans la table games
INSERT INTO games (game, year, season, city)
SELECT DISTINCT game, year, season, city
FROM import;

--Creation de la table events
\! echo "\nCreation de table events"
CREATE TABLE events (
    eno SERIAL PRIMARY KEY,
    sport VARCHAR(25),
    event VARCHAR(85)
);

-- Insersation des valeurs dans la table event
INSERT INTO events (sport, event)
SELECT DISTINCT sport, event
FROM import;


--Creation de la table performance
\! echo "\nCreation de table performance"
CREATE TABLE performance (
    pno SERIAL PRIMARY KEY,
    age INT,
    height INT,
    weight float,
    medal VARCHAR(6),
    athlete_id INT REFERENCES athlete(id),
    team_noc VARCHAR(3) REFERENCES team(noc),
    games_gno INT REFERENCES games(gno),
    events_eno INT REFERENCES events(eno)
);

-- Insersation des valeurs dans la table performance
INSERT INTO performance (athlete_id, age, height, weight, medal,team_noc, games_gno, events_eno)
SELECT i.id, i.age, i.height, i.weight, medal, i.noc, g.gno, e.eno
FROM import AS i JOIN games AS g
ON i.game = g.game AND i.year = g.year AND i.season = g.season AND i.city = g.city
JOIN events e ON i.sport = e.sport AND i.event = e.event;

-- Quelle taille en octet fait la table import
\! echo "\nTaille en octet de la table import"
SELECT pg_relation_size('import') AS "Taille de la table import";

-- Quelle taille en octet fait la somme des tables créées
\! echo "\nTaille de la somme des tables créées"
SELECT sum(pg_total_relation_size) AS "Somme des tables créées"
FROM (
        SELECT pg_total_relation_size('import')
        UNION SELECT pg_total_relation_size('region')
        UNION SELECT pg_total_relation_size('games')
	UNION SELECT pg_total_relation_size('events')
	UNION SELECT pg_total_relation_size('athlete')
	UNION SELECT pg_total_relation_size('performance')
	UNION SELECT pg_total_relation_size('team')) AS union_tables;
